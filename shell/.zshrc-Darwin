# Map gmake to make
if [[ "$OSTYPE" == "darwin"* ]]; then
 export PATH="$(brew --prefix)/opt/make/libexec/gnubin:$PATH"
fi

# Map GCC to the version installed by Homebrew on macOS for x86_64
if [[ "$OSTYPE" == "darwin"* && $(uname -m) == 'x86_64' ]]; then
 print -v version /usr/local/opt/gcc@<->(n[-1])
 version=${version#*@}
 for file in /usr/local/opt/gcc@${version}/bin/*-${version}(*); do
   tail=${file:t}
   ln -sf ${file} /usr/local/bin/${tail%-*}
 done
fi

# Map GCC to the version installed by Homebrew on macOS for arm
if [[ "$OSTYPE" == "darwin"* && $(uname -m) == 'arm64' ]]; then
  print -v version /opt/homebrew/opt/gcc@<->(n[-1])
  version=${version#*@}
  for file in /opt/homebrew/opt/gcc@${version}/bin/*-${version}(*); do
    tail=${file:t}
    ln -sf ${file} /opt/homebrew/bin/${tail%-*}
  done
fi

#Ruby on macOS
if [ -d "/usr/local/opt/ruby/bin" ]; then
 export PATH=/usr/local/opt/ruby/bin:$PATH
 export PATH=`gem environment gemdir`/bin:$PATH
fi

# MATLAB Runtime
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:/Applications/MATLAB/MATLAB_Runtime/R2024b/runtime/maca64"
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:/Applications/MATLAB/MATLAB_Runtime/R2024b/bin/maca64"
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:/Applications/MATLAB/MATLAB_Runtime/R2024b/sys/os/maca64"
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:/Applications/MATLAB/MATLAB_Runtime/R2024b/extern/bin/maca64"

#Ruby on macOS arm64
if [ -d "/opt/homebrew/opt/ruby/bin" ]; then
  export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
  export PATH="`gem environment gemdir`/bin:$PATH"
fi

# opam
[[ ! -r '/Users/jitin/.opam/opam-init/init.zsh' ]] || source '/Users/jitin/.opam/opam-init/init.zsh' > /dev/null 2> /dev/null

# bun completions
[ -s "/Users/jitin/.bun/_bun" ] && source "/Users/jitin/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# Generated for envman. Added by webi installer for golang
[ -s "$HOME/.config/envman/load.sh" ] && source "$HOME/.config/envman/load.sh"

# zoxide
eval "$(zoxide init zsh)"
